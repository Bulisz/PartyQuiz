name: Test

on:
  workflow_dispatch:
  push:
    branches:
    - test

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.0.x
    - name: Restore dependencies
      run: dotnet restore ./PartyQuiz.sln
    - name: Build
      run: dotnet build ./PartyQuiz.sln --no-restore
    - name: Test
      run: dotnet test  -p:CollectCoverage=true -p:CoverletOutput=TestResults/ -p:CoverletOutputFormat=opencover ./ArchitectureTest/ArchitectureTest.csproj --no-build --verbosity normal --logger:"xunit;LogFilePath=/home/runner/work/PartyQuiz/PartyQuiz/ArchitectureTest/TestResults/test_results.xml"
    - name: Test Report
      uses: EnricoMi/publish-unit-test-result-action@v2
      if: always()
      with:
        xunit_files: "/home/runner/work/PartyQuiz/PartyQuiz/ArchitectureTest/TestResults/test_results.xml"
    # - name: Create Test Coverage Badge
    #   uses: simon-k/dotnet-code-coverage-badge@v1.0.0
    #   id: create_coverage_badge
    #   with:
    #     label: Unit Test Coverage
    #     color: brightgreen
    #     path: /home/runner/work/PartyQuiz/PartyQuiz/ArchitectureTest/TestResults/test_results.xml
    #     gist-filename: partyquiz-code-coverage.json
    #     gist-id: 1e55bf51b3cc710e6046e10a501cca74
    #     gist-auth-token: ${{ secrets.PARTY_QUIZ_CODE_COVERAGE_GIST_TOKEN }}
    # - name: Print code coverage
    #   run: echo "Code coverage percentage ${{steps.create_coverage_badge.outputs.percentage}}%"
